name: Release
on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        required: true
      developmentVersion:
        description: 'Next development version'
        required: true
      prerelease:
        description: 'Is pre release'
        required: false
        default: 'false'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Show input parameters
        run: |
          echo "Release version: ${{ github.event.inputs.releaseVersion }}"
          echo "Development version: ${{ github.event.inputs.developmentVersion }}"
          echo "Is prerelease: ${{ github.event.inputs.prerelease == 'true' }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Set up Maven settings.xml
        uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: '[{"id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.RELEASE_TOKEN }}"}]'

      - name: Configure Git
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Prepare Release
        run: |
          mvn -B release:prepare \
            -DreleaseVersion=${{ github.event.inputs.releaseVersion }} \
            -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} \
            -DtagNameFormat=v@{project.version}
      - name: Perform Release
        run: mvn -B release:perform

      - name: Login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push to dockerhub
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: roomelephant/elephlink:${{ github.event.inputs.releaseVersion }},roomelephant/elephlink:latest

      - name: Get previous tag
        id: previous_tag
        run: |
          PREV_TAG=$(git tag --sort=-creatordate | grep -v "^v${{ github.event.inputs.releaseVersion }}$" | head -n 1)
          echo "Previous tag: $PREV_TAG"
          echo "tag=$PREV_TAG" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.releaseVersion }}
          name: Release v${{ github.event.inputs.releaseVersion }}
          generate_release_notes: true
          files: |
            target/*.jar
            target/*.pom
          draft: false
          prerelease: ${{ github.event.inputs.prerelease == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        run: git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


